<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Matisco.Wpf.Controls.Buttons"
    xmlns:converters="clr-namespace:Matisco.Wpf.Controls.Coverters"
    xmlns:editors="clr-namespace:Matisco.Wpf.Controls.Editors">

    <converters:ButtonImageEnumToImageSourceConverter x:Key="ButtonImageEnumToImageSourceConverter"/>

    <converters:ButtonImageEnumToVisibilityConverter x:Key="ButtonImageEnumToVisibilityConverter"/>
    
    <converters:EditorSizeToWidthConverter x:Key="EditorSizeToWidthConverter"/>

    <converters:NotEmptyToVisibleConverter x:Key="NotEmptyToVisibleConverter"/>
    
    <converters:TrueToVisibleConverter x:Key="TrueToVisibleConverter"/>
    
    <converters:DisplayMemberPathConverter x:Key="DisplayMemberPathConverter"/>
    
    <SolidColorBrush x:Key="FocussedControlColor" Color="DarkGoldenrod"/>

    <Thickness x:Key="FocussedControlBorderThickness">2</Thickness>

    <SolidColorBrush x:Key="HoveredControlBorderColor" Color="#3C7FB1"/>

    <SolidColorBrush x:Key="HoveredControlColor" Color="#BEE6FD"/>
    
    <SolidColorBrush x:Key="RequiredFieldIndicatorColor" Color="#3C7FB1"/>
    
    <Style TargetType="{x:Type local:Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#707070"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Button}">
                    <Border x:Name="PART_Border" Focusable="True">
                       <Border.Style>
                           <Style TargetType="Border">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"/>
                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderThickness" Value="{StaticResource FocussedControlBorderThickness}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource FocussedControlColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource HoveredControlColor}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource HoveredControlBorderColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                           </Style>
                       </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" MaxWidth="16" Margin="5 0 0 0" Focusable="False"
                                   Visibility="{TemplateBinding Image, Converter={StaticResource ButtonImageEnumToVisibilityConverter}}"
                                   Source="{TemplateBinding Image, Converter={StaticResource ButtonImageEnumToImageSourceConverter}}"/>

                            <TextBlock Grid.Column="1" Margin="5 0" Focusable="False"
                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Text="{TemplateBinding Text}"/>
                        </Grid>
                    </Border>
               </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editors:TextEditor}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#707070"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editors:TextEditor}">
                    <Grid Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock 
                            Grid.Column="0"
                            Text="{TemplateBinding Label}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5" Focusable="False"
                                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Label, Converter={StaticResource NotEmptyToVisibleConverter}}"
                                           Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LabelSize, Converter={StaticResource EditorSizeToWidthConverter}}"/>

                        <Border x:Name="PART_Border" Grid.Column="1" Focusable="False">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"/>
                                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="True">
                                            <Setter Property="BorderThickness" Value="{StaticResource FocussedControlBorderThickness}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource FocussedControlColor}"/>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource HoveredControlBorderColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Polygon Points="0,0 6,0 0,6"
                                         Stroke="{Binding ElementName=PART_Border, Path=BorderBrush}"
                                         StrokeThickness="1"
                                         HorizontalAlignment="Left"
                                         Visibility="{TemplateBinding ShowRequiredIndicator, Converter={StaticResource TrueToVisibleConverter}}"
                                         VerticalAlignment="Top">
                                    <Polygon.Style>
                                        <Style TargetType="Polygon">
                                            <Setter Property="Fill" Value="{StaticResource RequiredFieldIndicatorColor}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="True">
                                                    <Setter Property="Fill" Value="{StaticResource FocussedControlColor}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=PART_Border, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Fill" Value="{StaticResource HoveredControlBorderColor}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Polygon.Style>
                                </Polygon>
                                
                                <TextBox x:Name="PART_TextBox"
                                         BorderThickness="0" BorderBrush="Transparent" Background="Transparent" FocusVisualStyle="{x:Null}"
                                         VerticalContentAlignment="Center"
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EditValue, UpdateSourceTrigger=PropertyChanged}" 
                                         Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Size, Converter={StaticResource EditorSizeToWidthConverter}}"/>
                            </Grid>
                         </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editors:CheckboxEditor}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editors:CheckboxEditor}">
                    <Grid Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock 
                            Grid.Column="0"
                            Text="{TemplateBinding Label}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5" Focusable="False"
                                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Label, Converter={StaticResource NotEmptyToVisibleConverter}}"
                                           Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LabelSize, Converter={StaticResource EditorSizeToWidthConverter}}"/>

                        <CheckBox x:Name="PART_CheckBox" Grid.Column="1"
                                         IsChecked="{TemplateBinding EditValue}" 
                                         Content="{TemplateBinding Text}">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderThickness" Value="{StaticResource FocussedControlBorderThickness}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource FocussedControlColor}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource HoveredControlBorderColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editors:ComboboxEditor}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#707070"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editors:ComboboxEditor}">
                    <Grid Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock 
                            Grid.Column="0"
                            Text="{TemplateBinding Label}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5" Focusable="False"
                                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Label, Converter={StaticResource NotEmptyToVisibleConverter}}"
                                           Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LabelSize, Converter={StaticResource EditorSizeToWidthConverter}}"/>

                        <Border x:Name="PART_Border" Grid.Column="1" Focusable="False">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"/>
                                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Size, Converter={StaticResource EditorSizeToWidthConverter}}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="True">
                                            <Setter Property="BorderThickness" Value="{StaticResource FocussedControlBorderThickness}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource FocussedControlColor}"/>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource HoveredControlBorderColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="16"/>
                                </Grid.ColumnDefinitions>
                                <Polygon Grid.Column="0" Points="0,0 6,0 0,6"
                                         Stroke="{Binding ElementName=PART_Border, Path=BorderBrush}"
                                         StrokeThickness="1"
                                         HorizontalAlignment="Left"
                                         Visibility="{TemplateBinding ShowRequiredIndicator, Converter={StaticResource TrueToVisibleConverter}}"
                                         VerticalAlignment="Top">
                                    <Polygon.Style>
                                        <Style TargetType="Polygon">
                                            <Setter Property="Fill" Value="{StaticResource RequiredFieldIndicatorColor}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="True">
                                                    <Setter Property="Fill" Value="{StaticResource FocussedControlColor}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=PART_Border, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Fill" Value="{StaticResource HoveredControlBorderColor}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Polygon.Style>
                                </Polygon>

                                <TextBox Grid.Column="0" x:Name="PART_TextBox"
                                         BorderThickness="0" BorderBrush="Transparent" Background="Transparent" FocusVisualStyle="{x:Null}"
                                         VerticalContentAlignment="Center"
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EditValue, Converter={StaticResource DisplayMemberPathConverter}, ConverterParameter={TemplateBinding DisplayMemberPath}}" />

                                <Button x:Name="PART_ButtonClear" Grid.Column="1" Focusable="False">
                                    <Image Source="../Images/16/Clear.png" Width="10"/>
                                </Button>

                                <Button x:Name="PART_ButtonDown" Grid.Column="2" Focusable="False">
                                    <Path Fill="Black" Data="M 0 0 L 6 6 L 12 0 Z"/>
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editors:GridPopUp}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editors:GridPopUp}">
                    <Grid Focusable="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_Border" Grid.Row="0" Focusable="False">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="BorderBrush" Value="#707070"/>
                                    <Setter Property="Height" Value="28"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Size, Converter={StaticResource EditorSizeToWidthConverter}}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="True">
                                            <Setter Property="BorderThickness" Value="{StaticResource FocussedControlBorderThickness}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource FocussedControlColor}"/>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource HoveredControlBorderColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="16"/>
                                </Grid.ColumnDefinitions>
                                <Polygon Grid.Column="0" Points="0,0 6,0 0,6"
                                             Stroke="{Binding ElementName=PART_Border, Path=BorderBrush}"
                                             StrokeThickness="1"
                                             HorizontalAlignment="Left"
                                             Visibility="{TemplateBinding ShowRequiredIndicator, Converter={StaticResource TrueToVisibleConverter}}"
                                             VerticalAlignment="Top">
                                    <Polygon.Style>
                                        <Style TargetType="Polygon">
                                            <Setter Property="Fill" Value="{StaticResource RequiredFieldIndicatorColor}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="True">
                                                    <Setter Property="Fill" Value="{StaticResource FocussedControlColor}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=PART_Border, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Fill" Value="{StaticResource HoveredControlBorderColor}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Polygon.Style>
                                </Polygon>

                                <TextBox Grid.Column="0" x:Name="PART_TextBox"
                                             BorderThickness="0" BorderBrush="Transparent" Background="Transparent" FocusVisualStyle="{x:Null}"
                                             VerticalContentAlignment="Center"
                                            Text="{TemplateBinding Query}" />

                                <Button x:Name="PART_ButtonClear" Grid.Column="1" Focusable="False">
                                    <Image Source="../Images/16/Clear.png" Width="10"/>
                                </Button>

                                <Button x:Name="PART_ButtonUp" Grid.Column="2" Focusable="False">
                                    <Path Fill="Black" Data="M 0 6 L 12 6 L 6 0 Z"/>
                                </Button>
                            </Grid>
                        </Border>
                        <DataGrid Grid.Row="1" MinWidth="350" MinHeight="150" CanUserDeleteRows="False" IsReadOnly="True" IsTabStop="False"
                            x:Name="PART_DataGrid" SelectionUnit="FullRow" SelectionMode="Extended" CanUserAddRows="False"
                            VerticalGridLinesBrush="Transparent" HorizontalGridLinesBrush="LightGray"
                            ItemsSource="{TemplateBinding Items}" 
                            SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HightlightedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            AlternatingRowBackground="Azure" AlternationCount="2">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </DataGrid.CellStyle>
                        </DataGrid>
                        <StackPanel Grid.Row="2" Orientation="Horizontal" Background="White" HorizontalAlignment="Stretch">
                            <TextBlock Text="{TemplateBinding RecordsCount}"
                                   VerticalAlignment="Center"/>
                            <TextBlock Text="records" Margin="5" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editors:PopUpWindow}" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>
</ResourceDictionary>
